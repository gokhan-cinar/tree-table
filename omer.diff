diff --git a/package-lock.json b/package-lock.json
index 9be8211..51d8d22 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -3113,11 +3113,6 @@
         "webpack-log": "^2.0.0"
       }
     },
-    "core-js": {
-      "version": "3.1.4",
-      "resolved": "https://registry.npmjs.org/core-js/-/core-js-3.1.4.tgz",
-      "integrity": "sha512-YNZN8lt82XIMLnLirj9MhKDFZHalwzzrL9YLt6eb0T5D0EDl4IQ90IGkua8mHbnxNrkj1d8hbdizMc0Qmg1WnQ=="
-    },
     "core-util-is": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
diff --git a/src/app/routes/tree-table/tree-table.component.html b/src/app/routes/tree-table/tree-table.component.html
index 18e0ef2..7483d66 100644
--- a/src/app/routes/tree-table/tree-table.component.html
+++ b/src/app/routes/tree-table/tree-table.component.html
@@ -7,30 +7,40 @@
         <th>Name</th>
         <th>Phone</th>
         <th>City</th>
-        <th class="center-text">Delete</th> 
+        <th class="center-text">Delete</th>
       </tr>
     </thead>
     <tbody>
-      <ng-template ngFor let-data [ngForOf]="nzTable.data" | async>
-        <tr>
-          <td [nzShowExpand]="!!data.parentID" [nzShowExpand]="!!item.parentID" [(nzExpand)]="mapOfExpandData[data.ID]"></td>
-          <td>{{data.ID}}</td>
-          <td>{{data.Name}}</td>
-          <td>{{data.Phone}}</td>
-          <td>{{data.City}}</td>
-          <td class="center-text"><a nz-popconfirm nzTitle="Sure to delete?" (nzOnConfirm)="deleteRow(data.ID)">Delete</a>
-          </td>
-        </tr>
-        <tr [nzExpand]="mapOfExpandData[data.ID]">
-          <td></td>
-          <td>{{data.parentID}}</td>
-          <td>{{data.City}}</td>
-          <td>{{data.Phone}}</td> 
-          <td>{{data.Name}}</td> 
-          <td></td>
-        </tr>
-      </ng-template>
+<!--      <ng-template ngFor let-data [ngForOf]="nzTable.data" | async>-->
+<!--        <tr>-->
+<!--          <td [nzShowExpand]="data.children?.length" [(nzExpand)]="mapOfExpandData[data.ID]"></td>-->
+<!--          <td>{{data.ID}}</td>-->
+<!--          <td>{{data.Name}}</td>-->
+<!--          <td>{{data }}</td>-->
+<!--          <td>{{data.City}}</td>-->
+<!--          <td class="center-text"><a nz-popconfirm nzTitle="Sure to delete?" (nzOnConfirm)="deleteRow(data.ID)">Delete</a>-->
+<!--          </td>-->
+<!--        </tr>-->
+<!--      </ng-template>-->
+
+      <ng-container *ngFor="let data of nzTable.data">
+        <ng-container *ngFor="let item of mapOfExpandedData[data.ID]">
+          <tr *ngIf="(item.parent && item.parent.expand) || !item.parent">
+            <td
+                    [nzIndentSize]="item.level * 20"
+                    [nzShowExpand]="!!item.children"
+                    [(nzExpand)]="item.expand"
+                    (nzExpandChange)="collapse(mapOfExpandedData[data.parentID], item, $event)"
+            >
+            </td>
+            <td>{{ item.ID }}</td>
+            <td>{{ item.Name }}</td>
+            <td>{{ item.Phone }}</td>
+            <td>{{ item.City }}</td>
+          </tr>
+        </ng-container>
+      </ng-container>
     </tbody>
-  </nz-table>   
+  </nz-table>
 </main>
 
diff --git a/src/app/routes/tree-table/tree-table.component.ts b/src/app/routes/tree-table/tree-table.component.ts
index fa069e1..8186993 100644
--- a/src/app/routes/tree-table/tree-table.component.ts
+++ b/src/app/routes/tree-table/tree-table.component.ts
@@ -2,6 +2,16 @@ import { Component, OnInit } from '@angular/core';
 import { DataJsonService } from '../../_shared/services/data-json.service';
 import { TreeTable } from '../../_shared/models/data';
 
+export interface TreeNodeInterface {
+  ID: number;
+  Name: string;
+  Phone;
+  City;
+  expand: boolean;
+  parentID;
+  children?: TreeNodeInterface[];
+}
+
 @Component({
   selector: 'app-tree-table',
   templateUrl: './tree-table.component.html',
@@ -10,7 +20,48 @@ import { TreeTable } from '../../_shared/models/data';
 export class TreeTableComponent implements OnInit {
 
   treeTable: TreeTable[];
-  mapOfExpandData = {};
+  mapOfExpandedData: { [ID: string]: TreeNodeInterface[] } = {};
+
+  collapse(array: TreeNodeInterface[], data: TreeNodeInterface, $event: boolean): void {
+    if ($event === false) {
+      if (data.children) {
+        data.children.forEach(d => {
+          // tslint:disable-next-line:no-non-null-assertion
+          const target = array.find(a => a.ID === d.ID)!;
+          target.expand = false;
+          this.collapse(array, target, false);
+        });
+      } else {
+        return;
+      }
+    }
+  }
+
+  convertTreeToList(root: object): TreeNodeInterface[] {
+    const stack: any[] = [];
+    const array: any[] = [];
+    const hashMap = {};
+    stack.push({ ...root, level: 0, expand: false });
+
+    while (stack.length !== 0) {
+      const node = stack.pop();
+      this.visitNode(node, hashMap, array);
+      if (node.children) {
+        for (let i = node.children.length - 1; i >= 0; i--) {
+          stack.push({ ...node.children[i], level: node.level + 1, expand: false, parent: node });
+        }
+      }
+    }
+
+    return array;
+  }
+
+  visitNode(node: TreeNodeInterface, hashMap: { [ID: string]: any }, array: TreeNodeInterface[]): void {
+    if (!hashMap[node.ID]) {
+      hashMap[node.ID] = true;
+      array.push(node);
+    }
+  }
 
   constructor(private dataServive: DataJsonService) { }
 
@@ -20,7 +71,46 @@ export class TreeTableComponent implements OnInit {
 
   get() {
     this.dataServive.get().subscribe(resp => {
-      this.treeTable = resp;
+      // Find the root items.
+      const parentData = resp
+          .filter(item => !item.hasOwnProperty('parentID'))
+          .map(item => {
+            item.children = [];
+            return item;
+          });
+
+      const childData = resp.filter(item => item.hasOwnProperty('parentID'));
+      const subChildData = [];
+
+      // Find the first level children of the graph
+      childData.forEach((child, index) => {
+        const parent = parentData.find(parentItem => parentItem.ID === child.parentID);
+
+
+        if (!parent) {
+          // DONDURULEN COCUKLARA AIT
+          subChildData.push(child);
+          return;
+        }
+
+        parent.children.push(child);
+      });
+
+      console.log('subChildData:', subChildData);
+
+      subChildData.forEach((item, index) => {
+        /*
+          TODO traverse the tree and find the parent of the target child
+           and attach it to the children array of the parent.
+        */
+      });
+
+      this.treeTable = parentData;
+
+      this.treeTable.forEach(item => {
+        // @ts-ignore
+        this.mapOfExpandedData[item.ID] = this.convertTreeToList(item);
+      });
     });
   }
 
diff --git a/src/assets/dataset.json b/src/assets/dataset.json
index 2e6d7ce..f536e7f 100755
--- a/src/assets/dataset.json
+++ b/src/assets/dataset.json
@@ -679,4 +679,4 @@
 		"City": "St. Ives",
 		"Name": "Bryar"
 	}
-]
\ No newline at end of file
+]
diff --git a/src/polyfills.ts b/src/polyfills.ts
index e639e40..dda568d 100644
--- a/src/polyfills.ts
+++ b/src/polyfills.ts
@@ -1,3 +1,3 @@
 import 'zone.js/dist/zone';  // Included with Angular CLI.
-import 'core-js/features/reflect';
+// import 'core-js/features/reflect';
 
